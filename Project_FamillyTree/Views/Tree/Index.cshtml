<!DOCTYPE html>
<html>

    <style>
    /* Please see documentation at https://docs.microsoft.com/aspnet/core/client-side/bundling-and-minification
    for details on configuring this project to bundle and minify static web assets. */

    /*a.navbar-brand {
      white-space: normal;
      text-align: center;
      word-break: break-all;
    }*/

    /* Provide sufficient contrast against white background */
    /*a {
      color: #0366d6;
    }

    .btn-primary {
      color: #fff;
      background-color: #1b6ec2;
      border-color: #1861ac;
    }

    .nav-pills .nav-link.active, .nav-pills .show > .nav-link {
      color: #fff;
      background-color: #1b6ec2;
      border-color: #1861ac;
    }*/

    /* Sticky footer styles
    -------------------------------------------------- */
    /*html {
      font-size: 14px;
    }
    
    }

    .border-top {
      border-top: 1px solid #e5e5e5;
    }
    .border-bottom {
      border-bottom: 1px solid #e5e5e5;
    }

    .box-shadow {
      box-shadow: 0 .25rem .75rem rgba(0, 0, 0, .05);
    }

    button.accept-policy {
      font-size: 1rem;
      line-height: inherit;
    }*/

    /* Sticky footer styles
    -------------------------------------------------- */
    /*html {
      position: relative;
      min-height: 100%;
    }

    body {*/
    /* Margin bottom by footer height */
    /*margin-bottom: 60px;
    }
    .footer {
      position: absolute;
      bottom: 0;
      width: 100%;
      white-space: nowrap;
      line-height: 60px;*/ /* Vertically center the text there */
    /*}*/



    body {
        margin: 0;
        padding: 0;
    }

    .header {
        padding: 1px;
        border-bottom: 1px solid black;
    }

    .container {
        display: flex;
        border: 1px solid #ccc;
    }

    .sidebar {
        width: 270px;
        height: 100vh;
        background-color: #f1f1f1;
        padding: 20px;
        box-sizing: border-box;
        border-right: 1px solid black;
        float: left;
        /* Add this */
    }

    .sidebar-header {
        text-align: center;
        margin-bottom: 20px;
    }

    .sidebar-menu {
        display: flex;
        flex-direction: row;
        justify-content: space-between;
        margin-bottom: 20px;
    }

        .sidebar-menu a {
            padding: 6px 8px;
            text-decoration: none;
            font-size: 16px;
            color: #818181;
        }

            .sidebar-menu a:hover {
                color: #f1f1f1;
                background-color: #818181;
            }

    .sidebar-content {
        display: flex;
        flex-direction: column;
    }

    .section {
        display: none;
    }

        .section.active {
            display: flex;
            flex-direction: column;
            margin-bottom: 20px;
        }

        .section h2 {
            margin-bottom: 5px;
        }

        .section input {
            margin-bottom: 10px;
        }

    .large-input {
        padding: 5px;
        font-size: 13px;
    }

    .sidebar-footer {
        margin-top: auto;
        text-align: center;
    }

        .sidebar-footer p {
            margin-bottom: 10px;
        }

        .sidebar-footer button {
            display: block;
            width: 100%;
            padding: 5px;
            margin-bottom: 5px;
        }

    .content {
        margin-left: 300px;
        /* Add this */
    }

    .tree {
        width: 10000px;
        margin: 50px auto;
    }

        .tree ul {
            padding-top: 20px;
            position: relative;
            transition: all 0.5s;
        }

        .tree li {
            float: left;
            text-align: center;
            list-style-type: none;
            position: relative;
            padding: 20px 5px 0 5px;
            transition: all 0.5s;
        }

            .tree li::before,
            .tree li::after {
                content: "";
                position: absolute;
                top: 0;
                right: 50%;
                border-top: 1px solid #ccc;
                width: 50%;
                height: 20px;
            }

            .tree li::after {
                right: auto;
                left: 50%;
                border-left: 1px solid #ccc;
            }

            .tree li:only-child::after,
            .tree li:only-child::before {
                display: none;
            }

            .tree li:only-child {
                padding-top: 0;
            }

            .tree li:first-child::before,
            .tree li:last-child::after {
                border: 0 none;
            }

            .tree li:last-child::before {
                border-right: 1px solid #ccc;
                border-radius: 0 5px 0 0;
            }

            .tree li:first-child::after {
                border-radius: 5px 0 0 0;
            }

        .tree ul ul::before {
            content: "";
            position: absolute;
            top: 0;
            left: 50%;
            border-left: 1px solid #ccc;
            width: 0;
            height: 20px;
        }

        .tree li a {
            border: 1px solid #ccc;
            padding: 8px 10px;
            text-decoration: none;
            color: #666;
            font-family: arial, verdana, tahoma;
            font-size: 20px;
            display: inline-block;
            border-radius: 5px;
            transition: all 0.5s;
            line-height: 1.2;
        }

            .tree li a:hover,
            .tree li a:hover + ul li a {
                background: #c8e4f8;
                color: #000;
                border: 1px solid #94a0b4;
            }

                .tree li a:hover + ul li::after,
                .tree li a:hover + ul li::before,
                .tree li a:hover + ul::before,
                .tree li a:hover + ul ul::before {
                    border-color: #94a0b4;
                }


    /*popup*/
    .header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        background-color: #f5f5f5;
        padding: 10px;
    }

    .header-content {
        display: flex;
        align-items: center;
        gap: 10px;
    }

    .header-title {
        margin: 0;
    }

    .header-buttons {
        flex-grow: 1;
        display: flex;
        justify-content: center;
    }

    .header-button {
        padding: 6px 12px;
        border-radius: 4px;
        background-color: #eee;
        text-decoration: none;
        color: #333;
        font-weight: bold;
        border: none;
        cursor: pointer;
    }

    .popup {
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background-color: rgba(0, 0, 0, 0.5);
        display: flex;
        justify-content: center;
        align-items: center;
        z-index: 9999;
        visibility: hidden;
        opacity: 0;
        transition: visibility 0s, opacity 0.3s;
    }

    .popup-content {
        background-color: #fff;
        padding: 20px;
        border-radius: 4px;
        max-width: 400px;
        text-align: center;
    }

    .popup-close {
        margin-top: 10px;
        padding: 6px 12px;
        border-radius: 4px;
        background-color: #eee;
        text-decoration: none;
        color: #333;
        font-weight: bold;
        border: none;
        cursor: pointer;
    }

    .popup-content input {
        width: 100%;
        margin-bottom: 10px;
        padding: 6px;
        border: 1px solid #ccc;
        border-radius: 4px;
    }

    .popup-content #activityDescription {
        height: 50px;
        /* Đặt chiều cao mong muốn cho phần mô tả */
        resize: vertical;
        /* Cho phép người dùng điều chỉnh chiều cao dọc của phần mô tả */
    }

    </style>


<head>
    <link rel="stylesheet" type="text/css" href="styles.css">
    <script src="script.js"></script>
    <link rel="stylesheet" type="text/css" href="/index.css">
    <style>
        .sidebar-content {
            display: flex;
            flex-direction: column;
            justify-content: center;
            align-items: center;
        }

        .tree {
            width: fit-content;
            margin-top: 200px;
        }

        <style >
        .sidebar-content {
            display: flex;
            flex-direction: column;
            justify-content: center;
            align-items: center;
        }

        .tree {
            width: fit-content;
            margin-top: 200px;
        }
    </style>


</head>

<body>
    <div class="header">
        <div class="header-content">
            <h1 class="header-title">Family Tree</h1>
            <div class="header-buttons">
                <a href="/Activities" class="header-button" style="margin-left: 680px;">Activities</a>
            </div>
        </div>
        <button class="header-button">Login</button>
    </div>
    


    <div class="sidebar">
        <div class="sidebar-header">
            <h2>Me</h2>
        </div>
        <div class="sidebar-menu">
            <a href="#" onclick="showSection('personal')">Personal</a>
            <a href="#" onclick="showSection('contact')">Contact</a>
            <a href="#" onclick="showSection('biographical')">Biographical</a>
        </div>
        <div class="sidebar-content">
            <div id="personal" class="section active">
                <h2>Personal</h2>
                <input type="text" class="large-input" placeholder="Given names" id="givenNamesInput">
                <input type="text" class="large-input" placeholder="Surname now">
                <input type="text" class="large-input" placeholder="Surname at birth">
                <input type="text" class="large-input" placeholder="Gender">
                <input type="text" class="large-input" placeholder="Birth date">
            </div>

            <div id="contact" class="section active">
                <h2>Contact</h2>
                <input type="text" class="large-input" placeholder="Email">
                <input type="text" class="large-input" placeholder="Website">
                <input type="text" class="large-input" placeholder="Blog">
                <input type="text" class="large-input" placeholder="Photo site">
                <input type="text" class="large-input" placeholder="Home tel">
                <input type="text" class="large-input" placeholder="Work tel">
                <input type="text" class="large-input" placeholder="Mobile">
                <input type="text" class="large-input" placeholder="Address">
                <input type="text" class="large-input" placeholder="Other">
            </div>

            <div id="biographical" class="section active">
                <h2>Biographical</h2>
                <input type="text" class="large-input" placeholder="Birth place">
                <input type="text" class="large-input" placeholder="Profession">
                <input type="text" class="large-input" placeholder="Company">
                <input type="text" class="large-input" placeholder="Interests">
                <input type="text" class="large-input" placeholder="Activities">
                <input type="text" class="large-input" placeholder="Bio notes">
            </div>

            <div class="sidebar-footer">
                <p>Click to add your relatives:</p>
                <button onclick="addParent()">Add Parent</button>
                <button onclick="addRelative('partner')">Add Partner</button>
                <button onclick="addRelative('sibling')">Add Brother/Sister</button>
                <button onclick="addRelative('child')">Add Child</button>
                <button onclick="saveData()">Save</button>
            </div>
        </div>
    </div>

    <div class="content">
        <div class="tree">
            <ul>
                <li>
                    <a href="#" style="font-size: 24px;">Me</a>
                    <ul id="familyTree"></ul>
                </li>
            </ul>
        </div>
    </div>


    <script>
        // Lấy các phần tử cần thiết
        var activityButton = document.querySelector(".header-button");
        var popup = document.getElementById("activityPopup");
        var closePopupButton = document.getElementById("closePopup");

        // Xử lý sự kiện khi nhấp vào nút "Activities"
        activityButton.addEventListener("click", function() {
            // Hiển thị popup
            popup.style.visibility = "visible";
            popup.style.opacity = 1;

            // Lấy thông tin hoạt động và cập nhật vào popup
            var activityTitle = document.getElementById("activityTitle");
            var activityDescription = document.getElementById("activityDescription");
            var activityStartDate = document.getElementById("activityStartDate");
            var activityEndDate = document.getElementById("activityEndDate");
            var activityPhone = document.getElementById("activityPhone");
            var activityEmail = document.getElementById("activityEmail");
            var activityCreatedBy = document.getElementById("activityCreatedBy");

            // Gán thông tin cho các phần tử trong popup
            activityTitle.textContent = "Activity Title";
            activityDescription.textContent = "Activity Description";
            activityStartDate.textContent = "Start Date";
            activityEndDate.textContent = "End Date";
            activityPhone.textContent = "Phone Number";
            activityEmail.textContent = "Email";
            activityCreatedBy.textContent = "Created By";
        });

        // Xử lý sự kiện khi nhấp vào nút đóng popup
        closePopupButton.addEventListener("click", function() {
            // Ẩn popup
            popup.style.visibility = "hidden";
            popup.style.opacity = 0;
        });
    </script>
    <script>
        // Hàm hiển thị mối quan hệ trong cây gia đình
        // Hàm hiển thị mối quan hệ trong cây gia đình
        // Hàm hiển thị mối quan hệ trong cây gia đình
        function displayFamilyTree(data, parentElement) {
            var siblingList = document.createElement("ul");

            for (var i = 0; i < data.length; i++) {
                var person = data[i];
                var personNode = document.createElement("li");
                var personLink = document.createElement("a");
                personLink.textContent = person.fullName;
                personLink.href = "#";
                personNode.appendChild(personLink);

                if (person.relatives && person.relatives.length > 0) {
                    var relativeList = document.createElement("ul");
                    personNode.appendChild(relativeList);
                    displayFamilyTree(person.relatives, relativeList);
                }

                if (person.relationType === "Sibling") {
                    siblingList.appendChild(personNode);
                } else {
                    parentElement.appendChild(personNode);
                }
            }

            if (siblingList.childNodes.length > 1) {
                var siblingNode = document.createElement("li");
                siblingNode.classList.add("sibling");
                siblingNode.appendChild(siblingList);
                parentElement.appendChild(siblingNode);
            } else if (siblingList.childNodes.length === 1) {
                parentElement.appendChild(siblingList.childNodes[0]);
            }
        }



        // Lấy dữ liệu từ API (mô phỏng dữ liệu trả về)
        var apiData = [
            {
                "id": 1,
                "fullName": "John Smith",
                "gender": 1,
                "dob": "1990-05-15T00:00:00",
                "phone": "1234567890",
                "email": "johnsmith@example.com",
                "address": "123 Main St, New York",
                "relationType": null,
                "relatives": [],
                "children": null
            },
            {
                "id": 4,
                "fullName": "Sarah Smith",
                "gender": 0,
                "dob": "1992-03-28T00:00:00",
                "phone": "7894561230",
                "email": "sarahsmith@example.com",
                "address": "456 Pine St, New York",
                "relationType": null,
                "relatives": [
                    {
                        "id": 1,
                        "fullName": "John Smith",
                        "gender": 1,
                        "dob": "1990-05-15T00:00:00",
                        "phone": "1234567890",
                        "email": "johnsmith@example.com",
                        "address": "123 Main St, New York",
                        "relationType": "Sibling",
                        "relatives": [],
                        "children": null
                    }
                ],
                "children": null
            }
        ];

        // Hiển thị cây gia đình
        var familyTreeElement = document.getElementById("familyTree");
        displayFamilyTree(apiData, familyTreeElement);
    </script>
    <script>

        // Bên dưới hàm saveData() đã được cập nhật
        function saveData() {
            var selectedNode = document.querySelector(".selected");
            if (selectedNode) {
                var givenNamesInput = document.getElementById("givenNamesInput");
                var givenNamesValue = givenNamesInput.value;
                selectedNode.textContent = givenNamesValue;


            }
        }


        function showSection(sectionId) {
            var sections = document.getElementsByClassName("section");
            for (var i = 0; i < sections.length; i++) {
                sections[i].classList.remove("active");
            }

            var section = document.getElementById(sectionId);
            section.classList.add("active");
        }

        function addParent() {
            var selectedNode = document.querySelector(".selected");
            if (selectedNode) {
                var newNode1 = document.createElement("li");
                newNode1.innerHTML = '<a href="#">Morther</a>';

                var newNode2 = document.createElement("li");
                newNode2.innerHTML = '<a href="#">Farther</a>';

                var parentList = document.createElement("ul");
                parentList.style.display = "block";
                parentList.appendChild(newNode1);
                parentList.appendChild(newNode2);

                var parentNode = document.createElement("li");
                parentNode.style.display = "inline";
                parentNode.appendChild(parentList);

                var grandparentNode = selectedNode.parentNode.parentNode;
                var grandparentList = grandparentNode.querySelector("ul");
                if (!grandparentList) {
                    grandparentList = document.createElement("ul");
                    grandparentNode.appendChild(grandparentList);
                }

                var siblingNodes = Array.from(grandparentList.children);
                var selectedNodeIndex = siblingNodes.indexOf(selectedNode);

                siblingNodes.splice(selectedNodeIndex, 0, parentNode);

                grandparentList.innerHTML = '';
                siblingNodes.forEach(function (node) {
                    grandparentList.appendChild(node);
                });

                siblingNodes = Array.from(grandparentList.children);

                selectedNode.classList.remove("selected");
                newNode1.firstChild.classList.add("selected");
                newNode2.firstChild.classList.add("selected");
            }
        }

        function addRelative(type) {
            var selectedNode = document.querySelector(".selected");
            if (selectedNode) {
                var newNode = document.createElement("li");
                newNode.innerHTML = '<a href="#">' + type.charAt(0).toUpperCase() + type.slice(1) + "</a>";

                var addRelativeButtons = newNode.querySelectorAll(".sidebar-footer button");
                for (var i = 0; i < addRelativeButtons.length; i++) {
                    addRelativeButtons[i].addEventListener("click", function () {
                        addRelative(this.dataset.type);
                    });
                }

                newNode.addEventListener("click", function (event) {
                    event.stopPropagation();
                    var currentSelected = document.querySelector(".selected");
                    if (currentSelected) {
                        currentSelected.classList.remove("selected");
                    }
                    this.classList.add("selected");
                });

                selectedNode.classList.remove("selected");

                if (type === "child") {
                    var childList = selectedNode.querySelector("ul");
                    if (!childList) {
                        childList = document.createElement("ul");
                        selectedNode.appendChild(childList);
                    }
                    childList.appendChild(newNode);
                    var givenNamesInput = document.getElementById("givenNamesInput");
                    givenNamesInput.addEventListener("input", function () {
                        newNode.firstChild.textContent = this.value;
                    });
                } else {
                    var siblingNode = document.createElement("li");
                    siblingNode.appendChild(newNode);

                    var parentSiblingList = selectedNode.parentNode.parentNode.querySelector("ul");
                    if (!parentSiblingList) {
                        parentSiblingList = document.createElement("ul");
                        selectedNode.parentNode.parentNode.appendChild(parentSiblingList);
                    }

                    var siblingNodes = Array.from(parentSiblingList.children);
                    var selectedNodeIndex = siblingNodes.indexOf(selectedNode);

                    siblingNodes.splice(selectedNodeIndex + 1, 0, siblingNode);

                    parentSiblingList.innerHTML = "";
                    siblingNodes.forEach(function (node) {
                        parentSiblingList.appendChild(node);
                    });

                    siblingNodes = Array.from(parentSiblingList.children);
                }
            }
        }



        var treeNodes = document.querySelectorAll(".tree li a");
        for (var i = 0; i < treeNodes.length; i++) {
            treeNodes[i].addEventListener("click", function () {
                var currentSelected = document.querySelector(".selected");
                if (currentSelected) {
                    currentSelected.classList.remove("selected");
                }
                this.parentNode.classList.add("selected");
            });
        }

        window.addEventListener("DOMContentLoaded", function() {
            showSection("personal");
            var meNode = document.querySelector(".tree li a");
            meNode.classList.add("selected");
        });


        window.addEventListener("DOMContentLoaded", function() {
            showSection("personal");
        });
    </script>
</body>

</html>